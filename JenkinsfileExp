/**
 * Runs a small regression test via cutechess against the latest stable version to get a overview of experimental changes.
 * Uses the docker container from our cutechess test project.
 */

pipeline {
    agent none
    triggers { pollSCM('*/30 * * * *') }

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'maven:3-jdk-8'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                sh 'mvn clean package -DskipTests -Dmaven.source.skip '
            }

            post {
                always {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }

        stage('Exp Test') {
            agent {
                docker {
                    image 'chesstest:01'
                    // Run the container on the node specified at the top-level of the Pipeline, in the same workspace, rather than on a new node entirely:
                    reuseNode true
                }
            }

            steps {
                sh 'cp target/*.jar target/jackychessExp.jar'
                sh 'cp target/jackychessExp.jar /jackychess/jackychessExp.jar'

//                    JARFILE = sh(returnStdout: true, script: 'ls target/*.jar')

//                    sh 'JARFILE=$(ls target/*.jar)'
                sh """
       cat << EOF > target/engines.json
[
  {
    "workingDirectory" : "/jackychess",
    "command" : "java -Djacky.logging.activate=false -Duser.home=/logs -jar /jackychess/jackychess-0.10.0.jar",
    "name" : "jcRef",
    "protocol": "uci",
    "options" : [
    ]
  },
   {
    "workingDirectory" : "/jackychess",
    "command" : "java -Djacky.logging.activate=false -Duser.home=/logs -jar /jackychess/jackychessExp.jar",
    "name" : "jcExp",
    "protocol": "uci",
    "options" : [
    ]
  }
]
EOF
"""

                sh 'ls /'
                sh 'ls '
//                sh 'cd target && /cutechess/projects/cli/./cutechess-cli -engines  '
                sh 'cd target && /cutechess/projects/cli/./cutechess-cli -engine conf=jcExp -engine conf=jcRef -each tc=/60+1 -games 2 -rounds 10 -repeat 2 -maxmoves 200 -concurrency 2 -wait 100 -recover -resultformat wide2 -ratinginterval 5 -openings file=/jackychess/openings.pgn | tee cutechess.log '

            }
            post {
                always {
                    archiveArtifacts 'target/cutechess.log'
                }
            }
        }
    }
}