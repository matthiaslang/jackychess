
caching.active=true

# material values from CPW

# middle game material values:
mat.pawnMG=86
mat.knightMG=310
mat.bishopMG=323
mat.rookMG=500
mat.queenMG=975

# end game material values:
mat.pawnEG=108
mat.knightEG=335
mat.bishopEG=345
mat.rookEG=500
mat.queenEG=975



# simple mobility analogue as in CPW where a medium mobility is 0, a "bad" mobility is negative
# the values are an int array indexed by the mobility of a figure.
# this way we can tune and adjust the values
#knightMobMG=4 * (mob-4)
mob.knight.MobMG= -35,  -20,  -10,   -4,    0,    4,    9,   14,   17
#knightMobEG=4 * (mob-4)
mob.knight.MobEG= -67,  -47,  -27,  -18,  -10,   -1,    3,    5,    1
#bishopMobMG=3 * (mob-7)
mob.bishop.MobMG= -27,  -16,   -8,   -2,    3,    7,    8,   10,    9,   12,   14,   16,   15,   20,    0
#bishopMobEG=3 * (mob-7)
mob.bishop.MobEG= -38,  -23,  -16,   -4,    4,    9,   13,   16,   18,   15,   12,   10,   18,    1,    0
#rookMobMG=2 * (mob-7)
mob.rook.MobMG= -28,  -17,  -13,  -10,  -12,   -8,   -6,   -6,   -5,   -5,   -3,   -5,   -2,   -1,   -6
#rookMobEG=4 * (mob-7)
mob.rook.MobEG= -23,   -9,   -6,   -2,    1,    3,    6,    9,   11,   13,   14,   16,   15,   18,   19
#queenMobMG=1 * (mob-14)
mob.queen.MobMG= -10,    1,   -8,   -7,   -7,   -5,   -3,   -3,   -1,    1,    2,    4,    6,    8,   10,   10,   11,   18,   26,   38,   38,   71,   70,   58,  121,   64,   13,   14,    0
#queenMobEG=2 * (mob-14)
mob.queen.MobEG= -32, -170,  -79,  -34,  -23,  -17,   -1,   14,   21,   27,   29,   34,   32,   35,   36,   39,   44,   34,   29,   17,   16,   -3,   -9,  -13,  -33,  -31,  -19,  -18,    0
# we do not measure king mobility (seems pretty useless, there should be other special king evaluations)
mob.king.MobMG=   6,   12,    7,    3,    1,   -7,  -14,  -22,    4,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
mob.king.MobEG=  -4,  -15,   -8,    0,    1,    4,   10,   10,   -2,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0

# king attack of fields around the enemy king
#knightKingAttack=2*att
mob.knight.KingAttackMG=   0,    4,    7,    9,    0,    0,    0,    0,    0,    0,    0,    0
mob.knight.KingAttackEG=   0,    9,   13,   12,    0,    0,    0,    0,    0,    0,    0,    0
#bishopKingAttack=2*att
mob.bishop.KingAttackMG=   0,    3,    5,   11,   11,    0,    0,    0,    0,    0,    0,    0
mob.bishop.KingAttackEG=   0,    4,   11,   12,    7,    0,    0,    0,    0,    0,    0,    0
#rookKingAttack=3*att
mob.rook.KingAttackMG=   0,    3,    6,    9,   14,   17,    0,    0,    0,    0,    0,    0
mob.rook.KingAttackEG=   0,    3,    1,    1,    2,    1,    0,    0,    0,    0,    0,    0
#queenKingAttack=4*att
mob.queen.KingAttackMG=   0,    2,    4,    7,    7,   12,   19,   20,   28,    0,    0,    0
mob.queen.KingAttackEG=   0,    0,    0,    5,    6,    6,    4,    1,    0,    0,    0,    0
#kingKingAttack=1*att
mob.king.KingAttackMG=   0,    0,    1,    3,    0,    1,    0,    0,    0,    0,    0,    0
mob.king.KingAttackEG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0


# king tropism (median manhattan distance of figure to king):
#knightTropismMG= 3 * tropism
mob.knight.TropismMG= -61,  -34,   -8,  -19,  -14,   -6,   -7,   -6,   -4,   -9,    1,   -1,   30,   37
#knightTropismEG= 3 * tropism
mob.knight.TropismEG=  19,  -11,  -11,   -1,    4,    1,    2,    4,    2,    5,    1,    2,   -2,    1

#bishopTropismMG= 2 * tropism
mob.bishop.TropismMG=  31,    7,   16,    8,   16,    4,   14,    5,   10,    2,   20,    8,   41,   14
#bishopTropismEG= 1 * tropism
mob.bishop.TropismEG=  20,   12,    7,    0,   14,    4,   13,    2,   11,   -3,    9,   -8,    5,   -3

#rookTropismMG= 2 * tropism
mob.rook.TropismMG= -18,   -4,   -8,  -15,  -10,   -7,   -1,    3,    8,   10,   23,   30,   46,    0
#rookTropismEG= 1 * tropism
mob.rook.TropismEG=  23,   24,   19,   18,   16,   12,    8,    4,    3,    3,   -1,   -4,   11,    0

#queenTropismMG= 2 * tropism
mob.queen.TropismMG=   2,  -23,  -11,  -13,   -6,   -7,  -11,   -6,   -3,    0,    4,   20,   31,    0
#queenTropismEG= 4 * tropism
mob.queen.TropismEG= -27,   24,   13,   13,   13,   10,   18,   12,   18,   11,   21,   12,   12,    0

#kingTropismMG= 0 * tropism
mob.king.TropismMG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
#kingTropismEG= 4 * tropism
mob.king.TropismEG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0

# pawn evaluation
# pawn shield
pawn.pawnShield2=10
pawn.pawnShield3=5

pawn.doublePawnPenaltyMG=1
pawn.doublePawnPenaltyEG=23
pawn.attackedPawnPenaltyMG=15
pawn.attackedPawnPenaltyEG=0
pawn.isolatedPawnPenaltyMG=6
pawn.isolatedPawnPenaltyEG=5
pawn.backwardedPawnPenaltyMG=8
pawn.backwardedPawnPenaltyEG=3

#**************************************************************************
#  Low material correction - guarding against an illusory material advan- *
#  tage. Full blown program should have more such rules, but the current  *
#  set ought to be useful enough. Please note that our code  assumes      *
#  different material values for bishop and  knight.                      *
#                                                                         *
#  - a single minor piece cannot win                                      *
#  - two knights cannot checkmate bare king                               *
#  - bare rook vs minor piece is drawish                                  *
#  - rook and minor vs rook is drawish                                    *
#**************************************************************************

materialRule.rookVsBishopIsDrawish=R vs B* -> Reduce half
materialRule.rookVsKnightIsDrawish=R vs N* -> Reduce half
materialRule.rookAndBishopVsRookIsDrawish=RB vs R* -> Reduce half
materialRule.rookAndKnightVsRookIsDrawish=RN vs R* -> Reduce half
materialRule.bareBishopCanNotWin=B vs X -> Reduce all
materialRule.bareKnightCanNotWin=N vs X -> Reduce all
## not sure if this rule makes sense...
materialRule.twoKnightsCannotWin=NN vs X -> Reduce all


# adjustments

#tempo=10
adjustments.tempoMG=1
adjustments.tempoEG=0
adjustments.bishopPairMG=27
adjustments.bishopPairEG=50
adjustments.knightPairMG=2
adjustments.knightPairEG=1
adjustments.rookPairMG=11
adjustments.rookPairEG=17

adjustments.knightAdjMG=-20, -16, -12, -8, -4, 0, 4, 8, 12
adjustments.knightAdjEG=-20, -16, -12, -8, -4, 0, 4, 8, 12

adjustments.rookAdjMG=15, 12, 9, 6, 3, 0, -3, -6, -9
adjustments.rookAdjEG=15, 12, 9, 6, 3, 0, -3, -6, -9

# mobility bonus for rooks on open or half open files:
mob.positional.rookOpenMG=31
mob.positional.rookOpenEG=15
mob.positional.rookHalfMG=11
mob.positional.rookHalfEG=9

# early qeen penality per minor undeveloped figure (bishops and knights)
mob.positional.earlyQueenPenalty=0

# blockages penalties:
kingBlocksRookPenalty=0
blockCentralPawnPenalty=0
bishopTrappedA7Penalty=0
bishopTrappedA6Penalty=0
knightTrappedA8Penalty=0
knightTrappedA7Penalty=0
c3KnightPenalty=0

# minor bonuses
returningBishop=0


endgameEvaluations.active=true


threats.ThreatByMinorMG=   0,   -7,   11,   22,   38,   32,    0
threats.ThreatByMinorEG=   0,    3,   15,   17,    2,  -12,    0

threats.ThreatByRookMG=   0,   -9,    2,   12,    5,   36,    0
threats.ThreatByRookEG=   0,    6,   11,    7,    8,    3,    0

threats.ThreatByKingMG=3
threats.ThreatByKingEG=21

threats.HangingMG=-7
threats.HangingEG=0

threats.WeakQueenProtectionMG=2
threats.WeakQueenProtectionEG=3

threats.RestrictedPieceMG=5
threats.RestrictedPieceEG=1

threats.ThreatByPawnPushMG=18
threats.ThreatByPawnPushEG=17

threats.ThreatBySafePawnMG=46
threats.ThreatBySafePawnEG=14

threats.SliderOnQueenMG=12
threats.SliderOnQueenEG=-1

threats.KnightOnQueenMG=4
threats.KnightOnQueenEG=5

pawn.passedPawn.multiplier.blocked=0.5000012
pawn.passedPawn.multiplier.noEnemyAttacksInFront=2.199995
pawn.passedPawn.multiplier.nextSquareAttacked=1.4000014
pawn.passedPawn.multiplier.nextSquareDefended=1.3000011

pawn.passedPawn.multiplier.enemyKingInFront=0.3
pawn.passedPawn.multiplier.attacked=0.4
pawn.passedPawn.multiplier.defendedByRookFromBehind=1.9999994
pawn.passedPawn.multiplier.attackedByRookFromBehind=0.20000002

pawn.passedPawn.kingMultiplicators=1.0000015, 2.6999953, 2.1999953, 1.8000014, 1.7000014, 1.4000015, 1.0, 1.2000014
pawn.passedPawn.passedScoreEg=   0,   39,   26,   12,    7,    2,    2


complexity.complexityTotalPawnsEG=2
complexity.complexityPawnFlanksEG=49
complexity.complexityPawnEndgameEG=61
complexity.complexityAdjustmentEG=-53

complexity.closednessKnightAdjustmentMG=   6,    8,   12,   15,   13,   16,   17,   17,   20
complexity.closednessKnightAdjustmentEG=  17,   27,   32,   38,   43,   50,   52,   57,   75

complexity.closednessRookAdjustmentMG= -26,  -23,  -14,  -12,   -9,  -10,   -1,   -2,    0
complexity.closednessRookAdjustmentEG=  88,  103,  105,  102,  101,   99,  101,   94,   62

king.safetyShelterKingFileMG=   0,   10,   10,    0,    3,   -3,  -22,  -11
king.safetyShelterKingFileEG=   0,    0,  -10,   10,    3,   -2,    7,    0
king.safetyShelterAdjacentFileMG=   0,    0,    0,    0,    1,   -2,  -10,    0
king.safetyShelterAdjacentFileEG=   0,    1,    1,    0,  -11,   -2,    1,    0

king.safetyStormBlockedMG=   0,    0,    4,    9,    9,    0,    8,    6
king.safetyStormBlockedEG=   0,    0,    0,    0,    2,    0,   -9,   12
king.safetyStormNonBlockedMG=   0,   29,  -24,    0,    0,    0,    0,    0
king.safetyStormNonBlockedEG=   0,    3,    0,    0,    0,    1,    0,    0

king.kingPawnFileProximityMG=   5,   11,    9,    3,   -7,  -14,  -14,  -26
king.kingPawnFileProximityEG=   8,   10,    9,    2,   -2,   -5,    5,  -16

king.kingDefendersMG= -54,  -27,  -12,    0,   11,   21,   32,   14,    0,    0,    0,    0
king.kingDefendersEG=  -6,    0,    0,    1,    0,    2,    9,    0,    0,    0,    0,    0

king.safetyAttackValueMG=0
king.safetyAttackValueEG=0
king.safetyWeakSquaresMG=-4
king.safetyWeakSquaresEG=-1
king.safetyNoEnemyQueensMG=4
king.safetyNoEnemyQueensEG=144
king.safetySafeQueenCheckMG=-28
king.safetySafeQueenCheckEG=-19
king.safetySafeRookCheckMG=-59
king.safetySafeRookCheckEG=-7
king.safetySafeBishopCheckMG=-22
king.safetySafeBishopCheckEG=-12
king.safetySafeKnightCheckMG=-18
king.safetySafeKnightCheckEG=-9
king.safetyAdjustmentMG=0
king.safetyAdjustmentEG=0
