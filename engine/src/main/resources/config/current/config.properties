
caching.active=true

# material values from CPW

# middle game material values:
mat.pawnMG=86
mat.knightMG=310
mat.bishopMG=323
mat.rookMG=500
mat.queenMG=975

# end game material values:
mat.pawnEG=108
mat.knightEG=335
mat.bishopEG=345
mat.rookEG=500
mat.queenEG=975



# simple mobility analogue as in CPW where a medium mobility is 0, a "bad" mobility is negative
# the values are an int array indexed by the mobility of a figure.
# this way we can tune and adjust the values
#knightMobMG=4 * (mob-4)
mob.knight.MobMG= -32,  -18,   -8,   -2,    0,    2,    8,   12,   12
#knightMobEG=4 * (mob-4)
mob.knight.MobEG= -70,  -48,  -29,  -20,  -10,    0,    1,    2,    1
#bishopMobMG=3 * (mob-7)
mob.bishop.MobMG= -29,  -18,   -9,   -2,    2,    8,    9,   11,   11,   11,   11,   19,   10,   20,    0
#bishopMobEG=3 * (mob-7)
mob.bishop.MobEG= -48,  -28,  -20,   -9,    1,    2,    8,   10,   10,    9,    8,    2,   11,   -8,    0
#rookMobMG=2 * (mob-7)
mob.rook.MobMG= -30,  -18,  -12,  -10,  -11,   -8,   -2,    0,   -2,   -2,   -1,   -9,   -2,    0,  -10
#rookMobEG=4 * (mob-7)
mob.rook.MobEG= -21,   -9,   -9,   -2,    0,    2,    2,    2,    9,   10,   12,   18,   18,   20,   19
#queenMobMG=1 * (mob-14)
mob.queen.MobMG= -10,    0,   -8,   -8,   -8,   -2,   -2,   -1,   -1,    1,    2,    2,    9,    9,   11,   11,   10,   19,   20,   39,   32,   60,   61,   42,  110,   60,   10,   10,    0
#queenMobEG=2 * (mob-14)
mob.queen.MobEG= -30, -160,  -80,  -31,  -12,  -30,   -9,    2,   21,   29,   29,   39,   22,   30,   32,   31,   40,   29,   29,   10,   11,   -1,  -10,  -19,  -40,  -40,  -20,  -20,    0
# we do not measure king mobility (seems pretty useless, there should be other special king evaluations)
mob.king.MobMG=  11,   18,    9,    2,   -2,   -8,  -18,  -22,   -9,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
mob.king.MobEG=   1,  -19,   -8,    0,    1,    2,   10,   10,   -1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0

# king attack of fields around the enemy king
#knightKingAttack=2*att
mob.knight.KingAttackMG=   0,    2,    8,   10,    0,    0,    0,    0,    0,    0,    0,    0
mob.knight.KingAttackEG=   0,   10,   12,   12,    0,    0,    0,    0,    0,    0,    0,    0
#bishopKingAttack=2*att
mob.bishop.KingAttackMG=   0,    2,    2,   10,   11,    0,    0,    0,    0,    0,    0,    0
mob.bishop.KingAttackEG=   0,    9,   18,   18,   12,    0,    0,    0,    0,    0,    0,    0
#rookKingAttack=3*att
mob.rook.KingAttackMG=   0,    2,    2,    9,   18,   20,    0,    0,    0,    0,    0,    0
mob.rook.KingAttackEG=   0,    8,   10,    8,    0,    0,    0,    0,    0,    0,    0,    0
#queenKingAttack=4*att
mob.queen.KingAttackMG=   0,    2,    2,    8,    2,   10,   19,   20,   22,    0,    0,    0
mob.queen.KingAttackEG=   0,    0,    2,    2,    9,    9,    8,    1,   18,    0,    0,    0
#kingKingAttack=1*att
mob.king.KingAttackMG=   0,    0,    1,    2,    0,    0,    0,    0,    0,    0,    0,    0
mob.king.KingAttackEG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0


# king tropism (median manhattan distance of figure to king):
#knightTropismMG= 3 * tropism
mob.knight.TropismMG= -60,  -39,  -12,  -19,  -18,   -8,   -8,   -8,   -2,   -2,   -1,   -1,   30,   50
#knightTropismEG= 3 * tropism
mob.knight.TropismEG=  20,  -10,   -9,   -1,    9,    1,    2,    2,    1,    1,    1,    2,   -2,    0

#bishopTropismMG= 2 * tropism
mob.bishop.TropismMG=  30,    1,   12,    8,   12,    2,   10,    2,    8,    1,   18,   10,   50,   21
#bishopTropismEG= 1 * tropism
mob.bishop.TropismEG=  20,   12,    9,   -8,   11,    1,   10,   -1,    9,   -9,    8,  -11,    1,   -9

#rookTropismMG= 2 * tropism
mob.rook.TropismMG= -12,    0,   -8,  -12,   -9,   -8,   -1,    1,    2,    9,   18,   21,   29,    0
#rookTropismEG= 1 * tropism
mob.rook.TropismEG=  12,   20,   18,   12,   11,   10,    2,    2,    2,    1,   -1,   -2,   18,    0

#queenTropismMG= 2 * tropism
mob.queen.TropismMG=  10,  -11,   -2,   -2,   -2,   -8,  -11,  -10,   -8,    1,    8,   28,   40,    0
#queenTropismEG= 4 * tropism
mob.queen.TropismEG= -30,    9,    2,    0,    2,    9,   10,   12,   18,    9,   10,    0,    2,    0

#kingTropismMG= 0 * tropism
mob.king.TropismMG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
#kingTropismEG= 4 * tropism
mob.king.TropismEG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0

# pawn evaluation
# pawn shield
pawn.pawnShield2=1
pawn.pawnShield3=0

pawn.doublePawnPenaltyMG=9
pawn.doublePawnPenaltyEG=29
pawn.attackedPawnPenaltyMG=20
pawn.attackedPawnPenaltyEG=0
pawn.isolatedPawnPenaltyMG=1
pawn.isolatedPawnPenaltyEG=1
pawn.backwardedPawnPenaltyMG=10
pawn.backwardedPawnPenaltyEG=1

#**************************************************************************
#  Low material correction - guarding against an illusory material advan- *
#  tage. Full blown program should have more such rules, but the current  *
#  set ought to be useful enough. Please note that our code  assumes      *
#  different material values for bishop and  knight.                      *
#                                                                         *
#  - a single minor piece cannot win                                      *
#  - two knights cannot checkmate bare king                               *
#  - bare rook vs minor piece is drawish                                  *
#  - rook and minor vs rook is drawish                                    *
#**************************************************************************

materialRule.rookVsBishopIsDrawish=R vs B* -> Reduce half
materialRule.rookVsKnightIsDrawish=R vs N* -> Reduce half
materialRule.rookAndBishopVsRookIsDrawish=RB vs R* -> Reduce half
materialRule.rookAndKnightVsRookIsDrawish=RN vs R* -> Reduce half
materialRule.bareBishopCanNotWin=B vs X -> Reduce all
materialRule.bareKnightCanNotWin=N vs X -> Reduce all
## not sure if this rule makes sense...
materialRule.twoKnightsCannotWin=NN vs X -> Reduce all


# adjustments

#tempo=10
adjustments.tempoMG=1
adjustments.tempoEG=0
adjustments.bishopPairMG=30
adjustments.bishopPairEG=49
adjustments.knightPairMG=1
adjustments.knightPairEG=0
adjustments.rookPairMG=29
adjustments.rookPairEG=19

adjustments.knightAdjMG=-20, -16, -12, -8, -4, 0, 4, 8, 12
adjustments.knightAdjEG=-20, -16, -12, -8, -4, 0, 4, 8, 12

adjustments.rookAdjMG=15, 12, 9, 6, 3, 0, -3, -6, -9
adjustments.rookAdjEG=15, 12, 9, 6, 3, 0, -3, -6, -9

# mobility bonus for rooks on open or half open files:
mob.positional.rookOpenMG=31
mob.positional.rookOpenEG=11
mob.positional.rookHalfMG=11
mob.positional.rookHalfEG=12

# early qeen penality per minor undeveloped figure (bishops and knights)
mob.positional.earlyQueenPenalty=0

# blockages penalties:
kingBlocksRookPenalty=0
blockCentralPawnPenalty=0
bishopTrappedA7Penalty=0
bishopTrappedA6Penalty=0
knightTrappedA8Penalty=0
knightTrappedA7Penalty=0
c3KnightPenalty=0

# minor bonuses
returningBishop=0


endgameEvaluations.active=true


threats.ThreatByMinorMG=   0,   -1,   11,   21,   39,   31,    0
threats.ThreatByMinorEG=   0,    1,   11,   19,    0,   -9,    0

threats.ThreatByRookMG=   0,  -10,    1,   11,    0,   31,    0
threats.ThreatByRookEG=   0,    9,   11,   10,   11,   10,    0

threats.ThreatByKingMG=1
threats.ThreatByKingEG=21

threats.HangingMG=-9
threats.HangingEG=0

threats.WeakQueenProtectionMG=-1
threats.WeakQueenProtectionEG=9

threats.RestrictedPieceMG=9
threats.RestrictedPieceEG=-1

threats.ThreatByPawnPushMG=19
threats.ThreatByPawnPushEG=19

threats.ThreatBySafePawnMG=41
threats.ThreatBySafePawnEG=19

threats.SliderOnQueenMG=10
threats.SliderOnQueenEG=-1

threats.KnightOnQueenMG=1
threats.KnightOnQueenEG=10

pawn.passedPawn.multiplier.blocked=0.90000004
pawn.passedPawn.multiplier.noEnemyAttacksInFront=1.9999999
pawn.passedPawn.multiplier.nextSquareAttacked=1.1
pawn.passedPawn.multiplier.nextSquareDefended=1.9999999

pawn.passedPawn.multiplier.enemyKingInFront=0.90000004
pawn.passedPawn.multiplier.attacked=0.90000004
pawn.passedPawn.multiplier.defendedByRookFromBehind=1.9999999
pawn.passedPawn.multiplier.attackedByRookFromBehind=0.90000004

pawn.passedPawn.kingMultiplicators=1.0, 2.1, 1.8999999, 1.1, 1.1, 1.1, 0.90000004, 0.90000004
pawn.passedPawn.passedScoreEg=   0,   39,   26,   12,    7,    2,    2


complexity.complexityTotalPawnsEG=1
complexity.complexityPawnFlanksEG=29
complexity.complexityPawnEndgameEG=50
complexity.complexityAdjustmentEG=-21

complexity.closednessKnightAdjustmentMG=   9,   10,    9,   10,    9,   11,   11,   11,   10
complexity.closednessKnightAdjustmentEG=   1,   11,   21,   29,   31,   40,   41,   40,   69

complexity.closednessRookAdjustmentMG=   1,    1,    1,    0,   10,    1,   11,    0,    1
complexity.closednessRookAdjustmentEG=  61,   80,   90,   90,   80,   90,   90,   90,   60

king.safetyShelterKingFileMG=   0,   10,   10,    0,    0,    0,  -20,  -11
king.safetyShelterKingFileEG=   0,    0,  -10,   10,    0,   -1,    0,    0
king.safetyShelterAdjacentFileMG=   0,    0,    0,    0,    1,    0,  -10,    0
king.safetyShelterAdjacentFileEG=   0,    1,    1,    0,  -11,    0,   -9,    0

king.safetyStormBlockedMG=   0,    0,    1,    9,    9,    0,    2,   10
king.safetyStormBlockedEG=   0,    0,    0,    0,    0,    0,  -11,   10
king.safetyStormNonBlockedMG=   0,   30,  -21,    0,    0,    0,    0,    0
king.safetyStormNonBlockedEG=   0,    9,    0,    0,    0,    1,    0,    0

king.kingPawnFileProximityMG=   1,   11,    9,    8,   -9,  -30,  -20,  -29
king.kingPawnFileProximityEG=   8,   10,    9,    1,   -1,   -1,    9,  -20

king.kingDefendersMG= -52,  -28,  -11,    0,   10,   20,   29,   10,    0,    0,    0,    0
king.kingDefendersEG=  -1,    0,    0,    1,    0,    1,   10,    0,    0,    0,    0,    0

king.safetyAttackValueMG=0
king.safetyAttackValueEG=0
king.safetyWeakSquaresMG=-1
king.safetyWeakSquaresEG=-1
king.safetyNoEnemyQueensMG=1
king.safetyNoEnemyQueensEG=101
king.safetySafeQueenCheckMG=-29
king.safetySafeQueenCheckEG=-19
king.safetySafeRookCheckMG=-59
king.safetySafeRookCheckEG=-9
king.safetySafeBishopCheckMG=-20
king.safetySafeBishopCheckEG=-11
king.safetySafeKnightCheckMG=-20
king.safetySafeKnightCheckEG=-9
king.safetyAdjustmentMG=0
king.safetyAdjustmentEG=0
