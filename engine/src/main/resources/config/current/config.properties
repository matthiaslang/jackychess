
caching.active=true

# material values from CPW

# middle game material values:
mat.pawnMG=86
mat.knightMG=310
mat.bishopMG=323
mat.rookMG=500
mat.queenMG=975

# end game material values:
mat.pawnEG=108
mat.knightEG=335
mat.bishopEG=345
mat.rookEG=500
mat.queenEG=975



# simple mobility analogue as in CPW where a medium mobility is 0, a "bad" mobility is negative
# the values are an int array indexed by the mobility of a figure.
# this way we can tune and adjust the values
#knightMobMG=4 * (mob-4)
mob.knight.MobMG= -34,  -20,  -10,   -4,    0,    4,    9,   14,   17
#knightMobEG=4 * (mob-4)
mob.knight.MobEG= -66,  -46,  -27,  -18,  -10,   -2,    3,    5,    1
#bishopMobMG=3 * (mob-7)
mob.bishop.MobMG= -27,  -16,   -9,   -2,    2,    7,    8,   11,   11,   12,   15,   17,   14,   20,    0
#bishopMobEG=3 * (mob-7)
mob.bishop.MobEG= -40,  -23,  -16,   -5,    4,    9,   12,   15,   17,   14,   10,    9,   16,   -2,    0
#rookMobMG=2 * (mob-7)
mob.rook.MobMG= -28,  -17,  -12,  -10,  -11,   -8,   -6,   -5,   -5,   -4,   -3,   -5,   -2,   -2,   -7
#rookMobEG=4 * (mob-7)
mob.rook.MobEG= -23,   -7,   -7,   -2,    0,    3,    5,    8,   11,   12,   14,   16,   16,   19,   19
#queenMobMG=1 * (mob-14)
mob.queen.MobMG= -10,    0,   -8,   -8,   -7,   -5,   -3,   -3,   -1,    1,    2,    4,    7,    8,   10,   11,   12,   19,   26,   39,   37,   68,   65,   54,  118,   60,   10,   10,    0
#queenMobEG=2 * (mob-14)
mob.queen.MobEG= -30, -166,  -84,  -33,  -27,  -19,   -1,   13,   21,   27,   29,   33,   32,   35,   36,   38,   44,   35,   31,   16,   15,   -2,   -6,  -15,  -34,  -36,  -20,  -20,    0
# we do not measure king mobility (seems pretty useless, there should be other special king evaluations)
mob.king.MobMG=   7,   12,    7,    2,    0,   -8,  -16,  -22,   -1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
mob.king.MobEG=  -5,  -15,   -8,    0,    1,    4,   10,   10,   -2,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0

# king attack of fields around the enemy king
#knightKingAttack=2*att
mob.knight.KingAttackMG=   0,    4,    7,   10,    0,    0,    0,    0,    0,    0,    0,    0
mob.knight.KingAttackEG=   0,    9,   13,   10,    0,    0,    0,    0,    0,    0,    0,    0
#bishopKingAttack=2*att
mob.bishop.KingAttackMG=   0,    3,    4,   11,   11,    0,    0,    0,    0,    0,    0,    0
mob.bishop.KingAttackEG=   0,    6,   13,   13,   10,    0,    0,    0,    0,    0,    0,    0
#rookKingAttack=3*att
mob.rook.KingAttackMG=   0,    2,    6,    9,   14,   17,    0,    0,    0,    0,    0,    0
mob.rook.KingAttackEG=   0,    5,    2,    3,    2,    1,    0,    0,    0,    0,    0,    0
#queenKingAttack=4*att
mob.queen.KingAttackMG=   0,    2,    4,    7,    7,   12,   19,   20,   26,    0,    0,    0
mob.queen.KingAttackEG=   0,    0,    0,    5,    6,    7,    6,    1,    8,    0,    0,    0
#kingKingAttack=1*att
mob.king.KingAttackMG=   0,    0,    1,    4,    0,    0,    0,    0,    0,    0,    0,    0
mob.king.KingAttackEG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0


# king tropism (median manhattan distance of figure to king):
#knightTropismMG= 3 * tropism
mob.knight.TropismMG= -60,  -35,   -9,  -19,  -14,   -6,   -6,   -5,   -2,   -8,    1,   -3,   29,   42
#knightTropismEG= 3 * tropism
mob.knight.TropismEG=  20,   -8,   -9,   -1,    3,    1,    2,    4,    1,    5,    1,    2,   -2,    1

#bishopTropismMG= 2 * tropism
mob.bishop.TropismMG=  30,    5,   16,    8,   16,    4,   13,    4,   10,    2,   20,    9,   44,   17
#bishopTropismEG= 1 * tropism
mob.bishop.TropismEG=  20,   14,    8,    0,   13,    3,   12,    1,   10,   -4,    9,   -9,    6,   -4

#rookTropismMG= 2 * tropism
mob.rook.TropismMG= -18,   -4,   -8,  -15,   -9,   -7,   -1,    3,    7,    9,   23,   29,   44,    0
#rookTropismEG= 1 * tropism
mob.rook.TropismEG=  23,   24,   18,   18,   16,   12,    8,    4,    3,    3,   -1,   -4,   11,    0

#queenTropismMG= 2 * tropism
mob.queen.TropismMG=   8,  -19,   -9,  -11,   -5,   -7,  -11,   -6,   -4,    1,    5,   22,   34,    0
#queenTropismEG= 4 * tropism
mob.queen.TropismEG= -30,   22,   11,   12,   12,   10,   18,   12,   19,   11,   20,   12,   10,    0

#kingTropismMG= 0 * tropism
mob.king.TropismMG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
#kingTropismEG= 4 * tropism
mob.king.TropismEG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0

# pawn evaluation
# pawn shield
pawn.pawnShield2=7
pawn.pawnShield3=2

pawn.doublePawnPenaltyMG=3
pawn.doublePawnPenaltyEG=23
pawn.attackedPawnPenaltyMG=16
pawn.attackedPawnPenaltyEG=0
pawn.isolatedPawnPenaltyMG=5
pawn.isolatedPawnPenaltyEG=5
pawn.backwardedPawnPenaltyMG=8
pawn.backwardedPawnPenaltyEG=3

#**************************************************************************
#  Low material correction - guarding against an illusory material advan- *
#  tage. Full blown program should have more such rules, but the current  *
#  set ought to be useful enough. Please note that our code  assumes      *
#  different material values for bishop and  knight.                      *
#                                                                         *
#  - a single minor piece cannot win                                      *
#  - two knights cannot checkmate bare king                               *
#  - bare rook vs minor piece is drawish                                  *
#  - rook and minor vs rook is drawish                                    *
#**************************************************************************

materialRule.rookVsBishopIsDrawish=R vs B* -> Reduce half
materialRule.rookVsKnightIsDrawish=R vs N* -> Reduce half
materialRule.rookAndBishopVsRookIsDrawish=RB vs R* -> Reduce half
materialRule.rookAndKnightVsRookIsDrawish=RN vs R* -> Reduce half
materialRule.bareBishopCanNotWin=B vs X -> Reduce all
materialRule.bareKnightCanNotWin=N vs X -> Reduce all
## not sure if this rule makes sense...
materialRule.twoKnightsCannotWin=NN vs X -> Reduce all


# adjustments

#tempo=10
adjustments.tempoMG=1
adjustments.tempoEG=0
adjustments.bishopPairMG=30
adjustments.bishopPairEG=51
adjustments.knightPairMG=1
adjustments.knightPairEG=2
adjustments.rookPairMG=15
adjustments.rookPairEG=17

adjustments.knightAdjMG=-20, -16, -12, -8, -4, 0, 4, 8, 12
adjustments.knightAdjEG=-20, -16, -12, -8, -4, 0, 4, 8, 12

adjustments.rookAdjMG=15, 12, 9, 6, 3, 0, -3, -6, -9
adjustments.rookAdjEG=15, 12, 9, 6, 3, 0, -3, -6, -9

# mobility bonus for rooks on open or half open files:
mob.positional.rookOpenMG=31
mob.positional.rookOpenEG=15
mob.positional.rookHalfMG=11
mob.positional.rookHalfEG=9

# early qeen penality per minor undeveloped figure (bishops and knights)
mob.positional.earlyQueenPenalty=0

# blockages penalties:
kingBlocksRookPenalty=0
blockCentralPawnPenalty=0
bishopTrappedA7Penalty=0
bishopTrappedA6Penalty=0
knightTrappedA8Penalty=0
knightTrappedA7Penalty=0
c3KnightPenalty=0

# minor bonuses
returningBishop=0


endgameEvaluations.active=true


threats.ThreatByMinorMG=   0,   -5,   11,   21,   39,   33,    0
threats.ThreatByMinorEG=   0,    3,   15,   19,    2,  -11,    0

threats.ThreatByRookMG=   0,   -8,    3,   13,    4,   35,    0
threats.ThreatByRookEG=   0,    7,   11,    8,    9,    4,    0

threats.ThreatByKingMG=3
threats.ThreatByKingEG=21

threats.HangingMG=-7
threats.HangingEG=0

threats.WeakQueenProtectionMG=1
threats.WeakQueenProtectionEG=3

threats.RestrictedPieceMG=5
threats.RestrictedPieceEG=1

threats.ThreatByPawnPushMG=19
threats.ThreatByPawnPushEG=17

threats.ThreatBySafePawnMG=45
threats.ThreatBySafePawnEG=15

threats.SliderOnQueenMG=12
threats.SliderOnQueenEG=-1

threats.KnightOnQueenMG=3
threats.KnightOnQueenEG=6

pawn.passedPawn.multiplier.blocked=0.5
pawn.passedPawn.multiplier.noEnemyAttacksInFront=2.1999998
pawn.passedPawn.multiplier.nextSquareAttacked=1.5000014
pawn.passedPawn.multiplier.nextSquareDefended=1.4000012

pawn.passedPawn.multiplier.enemyKingInFront=0.3
pawn.passedPawn.multiplier.attacked=0.3
pawn.passedPawn.multiplier.defendedByRookFromBehind=2.1999998
pawn.passedPawn.multiplier.attackedByRookFromBehind=0.3

pawn.passedPawn.kingMultiplicators=1.0000015, 2.7, 2.1, 1.7000014, 1.7000014, 1.3000015, 0.90000004, 1.1000013
pawn.passedPawn.passedScoreEg=   0,   39,   26,   12,    7,    2,    2


complexity.complexityTotalPawnsEG=1
complexity.complexityPawnFlanksEG=51
complexity.complexityPawnEndgameEG=60
complexity.complexityAdjustmentEG=-47

complexity.closednessKnightAdjustmentMG=   7,    8,   13,   16,   13,   15,   15,   17,   18
complexity.closednessKnightAdjustmentEG=  15,   23,   29,   33,   41,   46,   49,   52,   71

complexity.closednessRookAdjustmentMG= -17,  -15,   -7,   -6,   -2,   -3,    7,    2,    3
complexity.closednessRookAdjustmentEG=  83,   96,  100,   96,   96,   92,   92,   90,   60

king.safetyShelterKingFileMG=   0,   10,   10,    0,    2,   -2,  -22,  -11
king.safetyShelterKingFileEG=   0,    0,  -10,   10,    2,   -1,    7,    0
king.safetyShelterAdjacentFileMG=   0,    0,    0,    0,    1,    0,  -10,    0
king.safetyShelterAdjacentFileEG=   0,    1,    1,    0,  -11,   -2,    2,    0

king.safetyStormBlockedMG=   0,    0,    4,    9,    9,    0,    8,    6
king.safetyStormBlockedEG=   0,    0,    0,    0,    2,    0,   -9,   12
king.safetyStormNonBlockedMG=   0,   29,  -23,    0,    0,    0,    0,    0
king.safetyStormNonBlockedEG=   0,    3,    0,    0,    0,    1,    0,    0

king.kingPawnFileProximityMG=   5,   11,    8,    2,   -8,  -16,  -17,  -26
king.kingPawnFileProximityEG=   8,   10,    9,    3,   -1,   -5,    7,  -16

king.kingDefendersMG= -54,  -26,  -11,    0,   11,   20,   31,   10,    0,    0,    0,    0
king.kingDefendersEG=  -5,    0,    0,    1,    0,    3,    8,    0,    0,    0,    0,    0

king.safetyAttackValueMG=0
king.safetyAttackValueEG=0
king.safetyWeakSquaresMG=-3
king.safetyWeakSquaresEG=-1
king.safetyNoEnemyQueensMG=11
king.safetyNoEnemyQueensEG=129
king.safetySafeQueenCheckMG=-29
king.safetySafeQueenCheckEG=-19
king.safetySafeRookCheckMG=-59
king.safetySafeRookCheckEG=-7
king.safetySafeBishopCheckMG=-21
king.safetySafeBishopCheckEG=-12
king.safetySafeKnightCheckMG=-19
king.safetySafeKnightCheckEG=-9
king.safetyAdjustmentMG=0
king.safetyAdjustmentEG=0
