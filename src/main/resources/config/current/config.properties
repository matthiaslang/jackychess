
caching.active=true

# material values from CPW

# middle game material values:
mat.PawnMG=100
mat.KnightMG=325
mat.BishopMG=335
mat.RookMG=500
mat.QueenMG=975

# end game material values:
mat.PawnEG=100
mat.KnightEG=325
mat.BishopEG=335
mat.RookEG=500
mat.QueenEG=975



# simple mobility analogue as in CPW where a medium mobility is 0, a "bad" mobility is negative
# the values are an int array indexed by the mobility of a figure.
# this way we can tune and adjust the values
#knightMobMG=4 * (mob-4)
mob.knight.MobMG= -25,  -11,   -4,    0,    6,   11,   16,   21,   35
#knightMobEG=4 * (mob-4)
mob.knight.MobEG= -76,  -27,  -10,    0,    7,   10,   12,   10,    3
#bishopMobMG=3 * (mob-7)
mob.bishop.MobMG= -12,    2,   12,   17,   20,   25,   27,   30,   28,   34,   39,   54,   21,   61,    0
#bishopMobEG=3 * (mob-7)
mob.bishop.MobEG= -43,  -27,  -15,   -7,    3,    4,   10,   11,   13,    9,    6,    7,   15,    5,    0
#rookMobMG=2 * (mob-7)
mob.rook.MobMG= -17,  -10,   -5,   -2,    0,    6,    9,   10,   15,   19,   23,   33,   34,   31,   32
#rookMobEG=4 * (mob-7)
mob.rook.MobEG= -50,  -25,   -9,   -6,    0,    2,    5,    9,   10,   10,   10,   10,   10,   14,   17
#queenMobMG=1 * (mob-14)
mob.queen.MobMG=  -6,   -6,   -4,   -7,    0,    1,   -1,   -1,    3,    8,    5,    9,   11,   10,   13,    9,   24,   17,   31,   42,   68,   73,   71,   86,   52,   73,   36,   61,    0
#queenMobEG=2 * (mob-14)
mob.queen.MobEG= -45,  -58,  -76,  -63,  -85,  -61,  -35,  -20,  -14,  -14,    8,   11,   11,   28,   26,   33,   30,   36,   28,   25,    3,    5,  -10,    0,   -3,   -1,  -14,  -30,    0
# we do not measure king mobility (seems pretty useless, there should be other special king evaluations)
mob.king.MobMG=  -9,   -8,   -8,   -6,   -3,   -7,    2,    5,   22,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
mob.king.MobEG= -10,  -25,  -10,    0,    0,    0,    0,    0,  -11,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0

# king attack of fields around the enemy king
#knightKingAttack=2*att
mob.knight.KingAttackMG=   0,    4,    5,   10,    0,    0,    0,    0,    0,    0,    0,    0
mob.knight.KingAttackEG=   0,    4,   12,   13,    0,    0,    0,    0,    0,    0,    0,    0
#bishopKingAttack=2*att
mob.bishop.KingAttackMG=   0,    3,    8,   12,   15,    0,    0,    0,    0,    0,    0,    0
mob.bishop.KingAttackEG=   0,    2,    6,   12,   10,    0,    0,    0,    0,    0,    0,    0
#rookKingAttack=3*att
mob.rook.KingAttackMG=   0,    3,    6,   12,   16,   17,    0,    0,    0,    0,    0,    0
mob.rook.KingAttackEG=   1,    2,    3,    5,   16,   19,    0,    0,    0,    0,    0,    0
#queenKingAttack=4*att
mob.queen.KingAttackMG=   0,    2,    4,    9,    8,   13,   21,   24,   50,   22,    0,    0
mob.queen.KingAttackEG=   0,    5,    7,    9,   12,   11,    9,    7,   50,    7,    0,    0
#kingKingAttack=1*att
mob.king.KingAttackMG=   0,    3,    4,    0,    0,    0,    0,    0,    0,    0,    0,    0
mob.king.KingAttackEG=   0,    0,    0,    3,    0,   11,    0,    0,    0,    0,    0,    0


# king tropism (median manhattan distance of figure to king):
#knightTropismMG= 3 * tropism
mob.knight.TropismMG=-101,  -33,   -4,  -15,   -4,   -1,    0,    6,    8,    6,   15,   19,   40,   34
#knightTropismEG= 3 * tropism
mob.knight.TropismEG= -71,   -3,  -11,   -3,    1,    0,    1,    5,   14,    8,   13,    5,   14,    9

#bishopTropismMG= 2 * tropism
mob.bishop.TropismMG= -29,   10,    5,   -1,    8,    1,    7,    2,   10,   -1,   14,    4,   38,   19
#bishopTropismEG= 1 * tropism
mob.bishop.TropismEG=  53,  -19,   10,   -6,   11,    3,   18,    1,   17,    0,   19,   -3,    8,    6

#rookTropismMG= 2 * tropism
mob.rook.TropismMG= -30,  -10,   -5,  -13,   -2,   -7,   -1,    4,    7,    4,   10,   19,   31,  274
#rookTropismEG= 1 * tropism
mob.rook.TropismEG=  23,   17,   14,   14,    7,    9,    5,    4,    6,    8,    7,    5,   14,    1

#queenTropismMG= 2 * tropism
mob.queen.TropismMG= -13,   -9,  -13,   -6,   -4,   -8,   -7,    2,    3,   -2,   13,   24,   52,  442
#queenTropismEG= 4 * tropism
mob.queen.TropismEG= -27,   14,   27,    4,   14,   21,   27,   18,   36,   33,   35,   15,   63,  324

#kingTropismMG= 0 * tropism
mob.king.TropismMG=   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
#kingTropismEG= 4 * tropism
mob.king.TropismEG= -28,  -24,  -20,  -16,  -12,   -8,   -4,    0,    4,    8,   12,   16,   20,   24

# pawn evaluation
# pawn shield
pawn.pawnShield2=27
pawn.pawnShield3=17

pawn.doublePawnPenaltyMG=15
pawn.doublePawnPenaltyEG=10
pawn.attackedPawnPenaltyMG=34
pawn.attackedPawnPenaltyEG=11
pawn.isolatedPawnPenaltyMG=6
pawn.isolatedPawnPenaltyEG=8
pawn.backwardedPawnPenaltyMG=4
pawn.backwardedPawnPenaltyEG=5

#**************************************************************************
#  Low material correction - guarding against an illusory material advan- *
#  tage. Full blown program should have more such rules, but the current  *
#  set ought to be useful enough. Please note that our code  assumes      *
#  different material values for bishop and  knight.                      *
#                                                                         *
#  - a single minor piece cannot win                                      *
#  - two knights cannot checkmate bare king                               *
#  - bare rook vs minor piece is drawish                                  *
#  - rook and minor vs rook is drawish                                    *
#**************************************************************************

materialRule.rookVsBishopIsDrawish=R vs B* -> Reduce half
materialRule.rookVsKnightIsDrawish=R vs N* -> Reduce half
materialRule.rookAndBishopVsRookIsDrawish=RB vs R* -> Reduce half
materialRule.rookAndKnightVsRookIsDrawish=RN vs R* -> Reduce half
materialRule.bareBishopCanNotWin=B vs X -> Reduce all
materialRule.bareKnightCanNotWin=N vs X -> Reduce all
## not sure if this rule makes sense...
materialRule.twoKnightsCannotWin=NN vs X -> Reduce all


# adjustments

#tempo=10
adjustments.tempoMG=-1
adjustments.tempoEG=1
adjustments.bishopPairMG=43
adjustments.bishopPairEG=43
adjustments.knightPairMG=-5
adjustments.knightPairEG=-4
adjustments.rookPairMG=12
adjustments.rookPairEG=16

adjustments.knightAdjMG=-20, -16, -12, -8, -4, 0, 4, 8, 12
adjustments.knightAdjEG=-20, -16, -12, -8, -4, 0, 4, 8, 12

adjustments.rookAdjMG=15, 12, 9, 6, 3, 0, -3, -6, -9
adjustments.rookAdjEG=15, 12, 9, 6, 3, 0, -3, -6, -9

# mobility bonus for rooks on open or half open files:
mob.positional.rookOpenMG=20
mob.positional.rookOpenEG=20
mob.positional.rookHalfMG=8
mob.positional.rookHalfEG=8

# early qeen penality per minor undeveloped figure (bishops and knights)
mob.positional.earlyQueenPenalty=0

# blockages penalties:
kingBlocksRookPenalty=0
blockCentralPawnPenalty=0
bishopTrappedA7Penalty=0
bishopTrappedA6Penalty=0
knightTrappedA8Penalty=0
knightTrappedA7Penalty=0
c3KnightPenalty=0

# minor bonuses
returningBishop=0


endgameEvaluations.active=true

threats.active=false

threats.ThreatByMinorMG=   0,    0,   14,   17,   33,   21,   86
threats.ThreatByMinorEG=   0,    3,   26,   15,    1,    0,   24

threats.ThreatByRookMG=   0,    0,   11,   18,    1,   48,  145
threats.ThreatByRookEG=   0,    5,    7,   13,    9,    0,    9

threats.ThreatByKingMG=0
threats.ThreatByKingEG=25

threats.HangingMG=0
threats.HangingEG=0

threats.WeakQueenProtectionMG=1
threats.WeakQueenProtectionEG=5

threats.RestrictedPieceMG=5
threats.RestrictedPieceEG=2

threats.ThreatByPawnPushMG=17
threats.ThreatByPawnPushEG=11

threats.ThreatBySafePawnMG=44
threats.ThreatBySafePawnEG=19

threats.SliderOnQueenMG=14
threats.SliderOnQueenEG=1

threats.KnightOnQueenMG=4
threats.KnightOnQueenEG=7

pawn.passedPawn.multiplier.blocked=0.60000265
pawn.passedPawn.multiplier.noEnemyAttacksInFront=2.1999893
pawn.passedPawn.multiplier.nextSquareAttacked=1.4000001
pawn.passedPawn.multiplier.nextSquareDefended=1.1999998

pawn.passedPawn.multiplier.enemyKingInFront=0.20000005
pawn.passedPawn.multiplier.attacked=0.5000014
pawn.passedPawn.multiplier.defendedByRookFromBehind=1.8999999
pawn.passedPawn.multiplier.attackedByRookFromBehind=0.30000004

pawn.passedPawn.kingMultiplicators=0.99999994, 3.0, 2.1999896, 1.9, 1.7, 1.5, 1.0999999, 1.5000001
pawn.passedPawn.passedScoreEg=   0,   39,   26,   12,    7,    2,    2


complexity.complexityTotalPawnsEG=4
complexity.complexityPawnFlanksEG=56
complexity.complexityPawnEndgameEG=61
complexity.complexityAdjustmentEG=-76

complexity.closednessKnightAdjustmentMG=   4,    4,    2,   11,    8,   11,   14,   16,   18
complexity.closednessKnightAdjustmentEG=  -3,    4,   13,   10,   12,   16,   23,   26,   16

complexity.closednessRookAdjustmentMG= -14,    1,    7,   18,   12,   40,   62,   33,   26
complexity.closednessRookAdjustmentEG=  30,   39,   52,   31,   34,   43,  -11,   51,  -22

king.safetyShelterKingFileMG=   0,    0,    0,   -1,  -17,  -37,  -15,   -9
king.safetyShelterKingFileEG=   0,    0,    0,    0,    0,   10,  -12,    0
king.safetyShelterAdjacentFileMG=   0,    1,    0,   -1,   -4,  -20,  -30,    0
king.safetyShelterAdjacentFileEG=   0,    0,    0,    0,    0,    0,   16,    0

king.safetyStormBlockedMG=   0,    0,   -6,    2,    3,    0,   31,  -21
king.safetyStormBlockedEG=   0,    0,    0,    0,    1,    0,   -9,   20
king.safetyStormNonBlockedMG=   0,  -15,   -8,    2,    0,   10,    0,   -2
king.safetyStormNonBlockedEG=   0,    0,    0,    0,    0,    0,    0,    0

king.kingPawnFileProximityMG=  -8,   10,   10,   -5,   25,   -4,   -8,   -1
king.kingPawnFileProximityEG=  -3,    0,    0,   -5,  -15,  -10,  -15,  -30

king.kingDefendersMG= -42,  -23,  -11,   -6,   -1,    3,    4,  -30,    0,    0,    0,    0
king.kingDefendersEG=  -3,    0,    0,   -5,   -4,   -2,  -41,    0,    0,    0,    0,    0

king.safetyAttackValueMG=3
king.safetyAttackValueEG=0
king.safetyWeakSquaresMG=-1
king.safetyWeakSquaresEG=0
king.safetyNoEnemyQueensMG=93
king.safetyNoEnemyQueensEG=22
king.safetySafeQueenCheckMG=-22
king.safetySafeQueenCheckEG=-14
king.safetySafeRookCheckMG=-59
king.safetySafeRookCheckEG=-6
king.safetySafeBishopCheckMG=-10
king.safetySafeBishopCheckEG=-10
king.safetySafeKnightCheckMG=-28
king.safetySafeKnightCheckEG=-5
king.safetyAdjustmentMG=0
king.safetyAdjustmentEG=0
