package org.mattlang.jc.movegenerator;

import org.mattlang.jc.board.Color;

/**
 * Collects moves generated by a MoveGenerator.
 */
public interface MoveCollector {

    void genMove(byte figureType, int from, int to, byte capturedFigureCode);

    void genPawnMove(int from, int to, Color color, byte capturedFigureCode);

    void addRochadeLongWhite();

    void addRochadeShortWhite();

    void addRochadeShortBlack();

    void addRochadeLongBlack();

    void genEnPassant(int i, int n, Color side, int enPassantCapturePos);

    /**
     * hook to get "hypothetical" captures of pawns.
     * Means a capture move of a pawn, but to an empty field.
     * This is needed to generate capture statistics and properly recognize patt situations.
     *
     * @param from
     * @param to
     */
    void hypotheticalPawnCapture(int from, int to);

}
